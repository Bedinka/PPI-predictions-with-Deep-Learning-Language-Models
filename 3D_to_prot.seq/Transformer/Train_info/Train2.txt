loading spacy tokenizers...
creating dataset and iterator... 
training model...
   0m: epoch 1 [                    ]  0%  loss = ...   0m: epoch 1 [                    ]  3%  loss = 1.294   0m: epoch 1 [#                   ]  7%  loss = 1.019   0m: epoch 1 [##                  ]  10%  loss = 0.977   0m: epoch 1 [##                  ]  14%  loss = 0.994   1m: epoch 1 [###                 ]  17%  loss = 0.986   1m: epoch 1 [####                ]  21%  loss = 0.963   1m: epoch 1 [#####               ]  25%  loss = 0.971   1m: epoch 1 [#####               ]  28%  loss = 0.943   2m: epoch 1 [######              ]  32%  loss = 0.985   2m: epoch 1 [#######             ]  35%  loss = 0.947   2m: epoch 1 [#######             ]  39%  loss = 0.948   2m: epoch 1 [########            ]  43%  loss = 0.922   2m: epoch 1 [#########           ]  46%  loss = 0.922   3m: epoch 1 [##########          ]  50%  loss = 0.921   3m: epoch 1 [##########          ]  53%  loss = 0.922   3m: epoch 1 [###########         ]  57%  loss = 0.905   3m: epoch 1 [############        ]  61%  loss = 0.884   4m: epoch 1 [############        ]  64%  loss = 0.904   4m: epoch 1 [#############       ]  68%  loss = 0.887   4m: epoch 1 [##############      ]  71%  loss = 0.870   4m: epoch 1 [###############     ]  75%  loss = 0.861   5m: epoch 1 [###############     ]  79%  loss = 0.873   5m: epoch 1 [################    ]  82%  loss = 0.855   5m: epoch 1 [#################   ]  86%  loss = 0.853   5m: epoch 1 [#################   ]  89%  loss = 0.839   6m: epoch 1 [##################  ]  93%  loss = 0.838   6m: epoch 1 [################### ]  97%  loss = 0.8526m: epoch 1 [####################]  100%  loss = 0.852
epoch 1 complete, loss = 0.852
   6m: epoch 2 [                    ]  0%  loss = ...   6m: epoch 2 [                    ]  3%  loss = 0.832   6m: epoch 2 [#                   ]  7%  loss = 0.843   7m: epoch 2 [##                  ]  10%  loss = 0.841   7m: epoch 2 [##                  ]  14%  loss = 0.826   7m: epoch 2 [###                 ]  17%  loss = 0.825   7m: epoch 2 [####                ]  21%  loss = 0.815   8m: epoch 2 [#####               ]  25%  loss = 0.840   8m: epoch 2 [#####               ]  28%  loss = 0.823   8m: epoch 2 [######              ]  32%  loss = 0.819   8m: epoch 2 [#######             ]  35%  loss = 0.821   9m: epoch 2 [#######             ]  39%  loss = 0.826   9m: epoch 2 [########            ]  43%  loss = 0.816   9m: epoch 2 [#########           ]  46%  loss = 0.835   9m: epoch 2 [##########          ]  50%  loss = 0.823   9m: epoch 2 [##########          ]  53%  loss = 0.816   10m: epoch 2 [###########         ]  57%  loss = 0.814   10m: epoch 2 [############        ]  61%  loss = 0.820   10m: epoch 2 [############        ]  64%  loss = 0.812   10m: epoch 2 [#############       ]  68%  loss = 0.818   11m: epoch 2 [##############      ]  71%  loss = 0.802   11m: epoch 2 [###############     ]  75%  loss = 0.809   11m: epoch 2 [###############     ]  79%  loss = 0.812   11m: epoch 2 [################    ]  82%  loss = 0.799   12m: epoch 2 [#################   ]  86%  loss = 0.792   12m: epoch 2 [#################   ]  89%  loss = 0.782   12m: epoch 2 [##################  ]  93%  loss = 0.811   12m: epoch 2 [################### ]  97%  loss = 0.79612m: epoch 2 [####################]  100%  loss = 0.796
epoch 2 complete, loss = 0.796
GPU memory occupied: 12159 MB.
training complete, save results? [y/n] : enter folder name to create for weights (no spaces) : saving weights to 10000_2500/...
weights and field pickles saved to 10000_2500
train for more epochs? [y/n] : exiting program...
